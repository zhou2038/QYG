<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qyg.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.qyg.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="INTEGER"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="height" property="height" jdbcType="DECIMAL"/>
        <result column="weight" property="weight" jdbcType="DECIMAL"/>
        <result column="target_weight" property="targetWeight" jdbcType="DECIMAL"/>
        <result column="user_type" property="userType" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, username, password, nickname, phone, email, avatar, gender, age, height, weight, 
        target_weight, user_type, status, create_time, update_time
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from user
        where id = #{id}
    </select>

    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from user
        where username = #{username}
    </select>

    <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from user
        where phone = #{phone}
    </select>

    <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from user
        where email = #{email}
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from user
        <where>
            <if test="keyword != null and keyword != ''">
                and (username like concat('%', #{keyword}, '%') 
                or nickname like concat('%', #{keyword}, '%')
                or phone like concat('%', #{keyword}, '%')
                or email like concat('%', #{keyword}, '%'))
            </if>
            <if test="userType != null">
                and user_type = #{userType}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectCount" resultType="java.lang.Integer">
        select count(*)
        from user
        <where>
            <if test="keyword != null and keyword != ''">
                and (username like concat('%', #{keyword}, '%') 
                or nickname like concat('%', #{keyword}, '%')
                or phone like concat('%', #{keyword}, '%')
                or email like concat('%', #{keyword}, '%'))
            </if>
            <if test="userType != null">
                and user_type = #{userType}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="com.qyg.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into user (username, password, nickname, phone, email, avatar, gender, age, height, weight, 
                         target_weight, user_type, status, create_time, update_time)
        values (#{username}, #{password}, #{nickname}, #{phone}, #{email}, #{avatar}, #{gender}, #{age}, #{height}, #{weight}, 
                #{targetWeight}, #{userType}, #{status}, now(), now())
    </insert>

    <update id="update" parameterType="com.qyg.entity.User">
        update user
        <set>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="age != null">age = #{age},</if>
            <if test="height != null">height = #{height},</if>
            <if test="weight != null">weight = #{weight},</if>
            <if test="targetWeight != null">target_weight = #{targetWeight},</if>
            update_time = now()
        </set>
        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from user where id = #{id}
    </delete>

    <update id="updateStatus">
        update user set status = #{status}, update_time = now() where id = #{id}
    </update>

    <update id="updatePassword">
        update user set password = #{password}, update_time = now() where id = #{id}
    </update>

</mapper> 